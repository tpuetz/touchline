name: CI & Deploy
on:
  push: { branches: [ "main" ] }
  workflow_dispatch: {}
jobs:
  test:
    runs-on: ubuntu-latest
    defaults: { run: { working-directory: apps/backend } }
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with: { ruby-version: '3.2', bundler-cache: true }
      - uses: actions/setup-node@v4
        with: { node-version: '20' }
      - run: bundle exec rails -v
  build_and_push:
    needs: test
    runs-on: ubuntu-latest
    permissions: { contents: read, packages: write }
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.KAMAL_REGISTRY_PASSWORD }}
      - name: Build & push
        run: |
          IMAGE="ghcr.io/${{ github.repository_owner }}/touchline:$(git rev-parse --short HEAD)"
          docker build -f apps/backend/Dockerfile -t "$IMAGE" .
          docker push "$IMAGE"
          echo "image=$IMAGE" >> $GITHUB_OUTPUT
        id: image
  deploy:
    needs: build_and_push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with: { ruby-version: '3.2' }
      - run: gem install kamal -N
      - name: Push env
        run: |
          kamal env push -y \
            SECRET_KEY_BASE=${{ secrets.SECRET_KEY_BASE }} \
            AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
            AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
            STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY }} \
            JWT_SECRET=${{ secrets.JWT_SECRET }} \
            POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
      - name: Deploy
        env: { KAMAL_REGISTRY_PASSWORD: ${{ secrets.KAMAL_REGISTRY_PASSWORD }} }
        run: |
          kamal setup --skip-traefik || true
          kamal deploy
